# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    paths: [ 'backend/**' ]
    branches: [ 'Infra/be/AutoDeploy' ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: github-actions-bucket-dongnebook
  RESOURCE_PATH: ./backend/src/main/resources/application-rds.yml
  RESOURCE_PATH_KAKAO: ./backend/src/main/java/com/dongnebook/domain/book/ui/bookController.java


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./backend/
        
        
      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./backend/

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          Spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          Spring.security.oauth2.client.registration.google.clientId: ${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}
          Spring.security.oauth2.client.registration.google.clientSecret: ${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}
          jwt.secret-key: ${{ secrets.JWT_SECRET_KEY }}
          cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}

      - name: Set kakao
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH_KAKAO }}
        env:
          KAKAO_KEY: ${{ secrets.KAKAO_KEY }}
        
        
      - name: Make zip file
        run: zip -r ./main-015-deploy.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
        
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./main-015-deploy.zip s3://$S3_BUCKET_NAME/main-015-deploy.zip
        
      - name: Code Deploy
        run: >
          aws deploy create-deployment --application-name dongnebook-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Deploy-dongnebook-EC2-sub
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=main-015-deploy.zip