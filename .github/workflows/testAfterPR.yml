# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle (Test After PR)

on:
  pull_request:
    paths: [ 'backend/**' , './.github/workflows/gradle.yml', './.github/workflows/testBeforeMerge.yml' ]
    branches: [ 'main' , 'dev' ]

permissions: write-all

env:
  RESOURCE_PATH: ./backend/src/main/resources/application-rds.yml
  RESOURCE_PATH_KAKAO: ./backend/src/main/resources/application-API-KEY.yml


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./backend/

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          spring.security.oauth2.client.registration.google.clientId: ${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.clientSecret: ${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}
          jwt.secret-key: ${{ secrets.JWT_SECRET_KEY }}
          cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
          logging.slack.webhook-uri: ${{ secrets.SLACK_WEBHOOK_URI_SEVER_ERROR_LOG }}
        
      - name: Set kakao
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH_KAKAO }}
        env:
          KAKAO_KEY: ${{ secrets.KAKAO_KEY }}        
        
      - name: Build with Gradle
        run: ./gradlew build -x test --stacktrace
        working-directory: ./backend/
        
      - name: Test with Gradle
        run: ./gradlew test --stacktrace
        working-directory: ./backend/

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: ./backend/build/test-results/**/*.xml

      - name: Upload Jacoco Report
        uses: madrapps/jacoco-report@v1.2
        if: always()
        with:
          title: Test Coverage Report
          paths: ./backend/jacoco/jacoco.xml
          min-coverage-overall: 50
          min-coverage-changed-files: 50
          
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
