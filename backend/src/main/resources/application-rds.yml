spring:
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true
  cache:
    type: redis
  redis:
    host: 13.124.11.174
    port: 6379
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  datasource:
    replication:
      username: admin
      password: ${RDS_PASSWORD}
      master:
        name: master
        url: jdbc:mysql://codestates-mainpj-mysql.clwvdgya13lr.ap-northeast-2.rds.amazonaws.com:3306/dongnebook
      slaves:
        - name: slave
          url: jdbc:mysql://replica.clwvdgya13lr.ap-northeast-2.rds.amazonaws.com:3306/dongnebook
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 100
        format_sql: true  # (3) SQL pretty print
        physical_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_OAUTH2_CLIENT_ID}
            clientSecret: ${GOOGLE_OAUTH2_CLIENT_SECRET}
            scope:
              - profile
              - email
  config:
    use-legacy-processing: true
  profiles:
    include: API-KEY

jwt:
  secret-key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 20160

decorator:
  datasource:
    p6spy:
      enable-logging: false



server:
  servlet:
    encoding:
      force-response: true

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket: codestates-dongnebook
    region:
      static: ap-northeast-2
    stack:
      auto: false



awsParameterStorePropertySource:
  enabled: true

logging:
  config: classpath:logback-spring.xml
